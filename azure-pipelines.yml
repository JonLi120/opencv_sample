# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
 - uat
 - feature/*

pool:
  vmImage: 'macos-latest'

stages:
- stage: Build
  jobs:
    - job: Build job
      steps:
        - task: JavaToolInstaller@0
          inputs:
            versionSpec: '11'
            jdkArchitectureOption: 'x64'
            jdkSourceOption: 'PreInstalled'

        - script: |
            java -version
          env:
            JAVA_HOME: $(JAVA_HOME_11_X64)
            PATH: $(JAVA_HOME_11_X64)/bin:$(PATH)
          displayName: 'Set Java Environment Variables'

        - task: DownloadSecureFile@1
          name: keystore
          displayName: 'Download keystore'
          inputs:
            secureFile: 'release.keystore'

        - task: DownloadSecureFile@1
          name: baseProperties
          displayName: 'Download Properties'
          inputs:
            secureFile: 'base.properties'

        - task: DownloadSecureFile@1
          name: firebaseCredential
          displayName: 'Download firebase credentials'
          inputs:
            secureFile: 'firebase_credentials.json'

        - script: |
            sudo chown root:root $(baseProperties.secureFilePath)
            sudo chmod a+r $(baseProperties.secureFilePath)
            sudo mv $(baseProperties.secureFilePath) $(Build.SourcesDirectory)
            sudo mv $(firebaseCredential.secureFilePath) $(Build.SourcesDirectory)
          displayName: 'Move files to root project'

        - script: |
            cd $(Build.SourcesDirectory)
            echo -e "\nKEYSTORE_FILE = $(keystore.secureFilePath)" >> base.properties
          displayName: 'Set up jks file path in properties.'

        - bash: echo "FIREBASE_ANDROID_ID = $FIREBASE_APP_ID"
          env: 
            FIREBASE_APP_ID: $(FIREBASE_ANDROID_ID)
          displayName: 'Set up firebase id in Environment.'

        - script: chmod +x ./gradlew
          displayName: 'Installed Gradlew'


- stage: Test

- stage: UAT
  dependsOn:
    - Build
    - Test
  condition: and(succeeded('Build'), eq(variables['Build.SourceBranch'], 'refs/heads/feature/*'))
  jobs:
    - job: UAT job
      steps: 
        - script: |
            echo 'this is uat job'
            echo $(variables['Build.SourceBranch'])

- stage: Release  
  dependsOn:
    - Build
    - Test
  condition: and(succeeded('Build'), eq(variables['Build.SourceBranch'], 'refs/heads/uat'))
  jobs:
    - job: Release job
      steps: 
        - script: |
            echo 'this is release job'
            echo $(variables['Build.SourceBranch'])